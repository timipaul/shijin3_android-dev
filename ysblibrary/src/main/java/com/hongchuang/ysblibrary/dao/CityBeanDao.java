package com.hongchuang.ysblibrary.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "wuche_base_city".
*/
public class CityBeanDao extends AbstractDao<CityBean, Void> {

    public static final String TABLENAME = "wuche_base_city";

    /**
     * Properties of entity CityBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property FLONGNAME = new Property(0, String.class, "FLONGNAME", false, "FLONGNAME");
        public final static Property FID = new Property(1, String.class, "FID", false, "FID");
        public final static Property FNAME = new Property(2, String.class, "FNAME", false, "FNAME");
        public final static Property CFPROVINCEIDID = new Property(3, String.class, "CFPROVINCEIDID", false, "CFPROVINCEIDID");
        public final static Property CFSTATE = new Property(4, String.class, "CFSTATE", false, "CFSTATE");
        public final static Property CFCITYLEVEL = new Property(5, String.class, "CFCITYLEVEL", false, "CFCITYLEVEL");
        public final static Property CFHKLEVEL = new Property(6, String.class, "CFHKLEVEL", false, "CFHKLEVEL");
        public final static Property CFKJLEVEL = new Property(7, String.class, "CFKJLEVEL", false, "CFKJLEVEL");
        public final static Property CFPJLEVEL = new Property(8, String.class, "CFPJLEVEL", false, "CFPJLEVEL");
    }


    public CityBeanDao(DaoConfig config) {
        super(config);
    }
    
    public CityBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, CityBean entity) {
        stmt.clearBindings();
 
        String FLONGNAME = entity.getFLONGNAME();
        if (FLONGNAME != null) {
            stmt.bindString(1, FLONGNAME);
        }
 
        String FID = entity.getFID();
        if (FID != null) {
            stmt.bindString(2, FID);
        }
 
        String FNAME = entity.getFNAME();
        if (FNAME != null) {
            stmt.bindString(3, FNAME);
        }
 
        String CFPROVINCEIDID = entity.getCFPROVINCEIDID();
        if (CFPROVINCEIDID != null) {
            stmt.bindString(4, CFPROVINCEIDID);
        }
 
        String CFSTATE = entity.getCFSTATE();
        if (CFSTATE != null) {
            stmt.bindString(5, CFSTATE);
        }
 
        String CFCITYLEVEL = entity.getCFCITYLEVEL();
        if (CFCITYLEVEL != null) {
            stmt.bindString(6, CFCITYLEVEL);
        }
 
        String CFHKLEVEL = entity.getCFHKLEVEL();
        if (CFHKLEVEL != null) {
            stmt.bindString(7, CFHKLEVEL);
        }
 
        String CFKJLEVEL = entity.getCFKJLEVEL();
        if (CFKJLEVEL != null) {
            stmt.bindString(8, CFKJLEVEL);
        }
 
        String CFPJLEVEL = entity.getCFPJLEVEL();
        if (CFPJLEVEL != null) {
            stmt.bindString(9, CFPJLEVEL);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, CityBean entity) {
        stmt.clearBindings();
 
        String FLONGNAME = entity.getFLONGNAME();
        if (FLONGNAME != null) {
            stmt.bindString(1, FLONGNAME);
        }
 
        String FID = entity.getFID();
        if (FID != null) {
            stmt.bindString(2, FID);
        }
 
        String FNAME = entity.getFNAME();
        if (FNAME != null) {
            stmt.bindString(3, FNAME);
        }
 
        String CFPROVINCEIDID = entity.getCFPROVINCEIDID();
        if (CFPROVINCEIDID != null) {
            stmt.bindString(4, CFPROVINCEIDID);
        }
 
        String CFSTATE = entity.getCFSTATE();
        if (CFSTATE != null) {
            stmt.bindString(5, CFSTATE);
        }
 
        String CFCITYLEVEL = entity.getCFCITYLEVEL();
        if (CFCITYLEVEL != null) {
            stmt.bindString(6, CFCITYLEVEL);
        }
 
        String CFHKLEVEL = entity.getCFHKLEVEL();
        if (CFHKLEVEL != null) {
            stmt.bindString(7, CFHKLEVEL);
        }
 
        String CFKJLEVEL = entity.getCFKJLEVEL();
        if (CFKJLEVEL != null) {
            stmt.bindString(8, CFKJLEVEL);
        }
 
        String CFPJLEVEL = entity.getCFPJLEVEL();
        if (CFPJLEVEL != null) {
            stmt.bindString(9, CFPJLEVEL);
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public CityBean readEntity(Cursor cursor, int offset) {
        CityBean entity = new CityBean( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // FLONGNAME
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // FID
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // FNAME
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // CFPROVINCEIDID
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // CFSTATE
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // CFCITYLEVEL
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // CFHKLEVEL
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // CFKJLEVEL
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8) // CFPJLEVEL
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, CityBean entity, int offset) {
        entity.setFLONGNAME(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setFID(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setFNAME(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setCFPROVINCEIDID(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setCFSTATE(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setCFCITYLEVEL(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setCFHKLEVEL(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setCFKJLEVEL(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setCFPJLEVEL(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(CityBean entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(CityBean entity) {
        return null;
    }

    @Override
    public boolean hasKey(CityBean entity) {
        // TODO
        return false;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
